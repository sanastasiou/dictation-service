#!/bin/bash
# Dictation Service Control Script

SERVICE_NAME="dictation-service"
CONFIG_FILE="$HOME/.config/dictation-service/config.json"
LOG_DIR="$HOME/.local/share/dictation-service/logs"

# Colors
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
MAGENTA='\033[0;35m'
NC='\033[0m'

case "$1" in
    start)
        echo -e "${GREEN}Starting dictation service...${NC}"
        systemctl --user start $SERVICE_NAME
        
        sleep 2
        
        if systemctl --user is-active --quiet $SERVICE_NAME; then
            echo -e "${GREEN}✓ Dictation service started${NC}"
            echo "Speak into your microphone and text will appear where your cursor is."
        else
            echo -e "${RED}Failed to start dictation service${NC}"
            echo "Check logs with: journalctl --user -u $SERVICE_NAME -n 50"
            exit 1
        fi
        ;;

    stop)
        echo -e "${RED}Stopping dictation service...${NC}"
        systemctl --user stop $SERVICE_NAME
        
        # Also kill any parecord processes
        pkill -f "parecord.*--format=s16le.*--rate=48000" 2>/dev/null
        
        echo -e "${RED}✓ Dictation service stopped${NC}"
        ;;

    restart)
        $0 stop
        sleep 1
        $0 start
        ;;

    status)
        if systemctl --user is-active --quiet $SERVICE_NAME; then
            echo -e "${GREEN}● Dictation service is running${NC}"
            
            # Check if parecord is also running
            if pgrep -f "parecord.*--format=s16le.*--rate=48000" > /dev/null; then
                echo -e "${GREEN}  ✓ Audio capture active${NC}"
            else
                echo -e "${YELLOW}  ⚠ Audio capture not detected${NC}"
            fi
            
            # Show current config
            if [ -f "$CONFIG_FILE" ]; then
                echo
                echo "Current configuration:"
                jq '{silence_threshold, whisper_model, language}' "$CONFIG_FILE" 2>/dev/null || cat "$CONFIG_FILE"
            fi
        else
            echo -e "${RED}● Dictation service is stopped${NC}"
        fi
        ;;

    toggle)
        if systemctl --user is-active --quiet $SERVICE_NAME; then
            $0 stop
        else
            $0 start
        fi
        ;;

    logs)
        if [ "$2" == "-f" ]; then
            journalctl --user -u $SERVICE_NAME -f
        else
            journalctl --user -u $SERVICE_NAME -n 50
        fi
        ;;

    enable)
        echo -e "${GREEN}Enabling dictation service to start on login...${NC}"
        systemctl --user enable $SERVICE_NAME
        echo -e "${GREEN}✓ Dictation service will start automatically on login${NC}"
        ;;

    disable)
        echo -e "${YELLOW}Disabling automatic start...${NC}"
        systemctl --user disable $SERVICE_NAME
        echo -e "${YELLOW}✓ Dictation service will not start automatically${NC}"
        ;;

    *)
        echo "Dictation Service Control"
        echo
        echo "Usage: dictation {start|stop|restart|status|toggle|logs|enable|disable}"
        echo
        echo "Commands:"
        echo "  start       - Start the dictation service"
        echo "  stop        - Stop the dictation service"
        echo "  restart     - Restart the service"
        echo "  status      - Show service status"
        echo "  toggle      - Toggle service on/off"
        echo "  logs        - Show recent logs (-f to follow)"
        echo "  enable      - Enable automatic start on login"
        echo "  disable     - Disable automatic start"
        exit 1
        ;;
esac